import {ChangeEvent, useState} from "react";
import authService from "../services/authentication/authService";
import Head from "next/head";
import SignUpSuccessAlert from "../components/login/SignUpSuccessAlert";
import SignUpErrorAlert from "../components/login/SignUpErrorAlert";
import ChangePasswordSuccessAlert from "../components/login/ChangePasswordSuccessAlert";
import ChangePasswordErrorAlert from "../components/login/ChangePasswordErrorAlert";

const ForgotPassword = () => {
    const [userName, setUserName] = useState<string>('')
    const handleUserNameInputChange = (event: ChangeEvent<HTMLInputElement>) => {
        setUserName(event.target.value)
    }

    // 2. Get value of password
    const [password, setPassword] = useState<string>('')
    const handlePasswordInputChange = (event: ChangeEvent<HTMLInputElement>) => {
        setPassword(event.target.value)
    }
    // 3. Click sign in > send data
    const handleClickChangePassword = async () => {
        // Send data to server
        const data = await authService.forgotPassword(userName, password)

        if (data.status.code === 200) {
            // 'Registered successfully! You will now be redirected to the login page.'
            showChangePasswordSuccessAlert()
            // Navigate to the login page after 5 seconds
            setTimeout(() => {
                navigateToTheLoginPage()
            }, 3000)
        } else {
            //Show alert if error
            showChangePasswordErrorAlert()
        }
    }

    const [showChangePasswordSuccess, setShowChangePasswordSuccess] = useState(false)
    const showChangePasswordSuccessAlert = () => {
        setShowChangePasswordSuccess(true)
        setTimeout(() => {
            setShowChangePasswordSuccess(false)
        }, 5000)
    }

    const [showChangePasswordError, setShowChangePasswordError] = useState(false)
    const showChangePasswordErrorAlert = () => {
        setShowChangePasswordError(true)
        setTimeout(() => {
            setShowChangePasswordError(false)
        }, 5000)
    }

    // 4. If success, navigate to the `patient` page
    const navigateToTheLoginPage = () => {
        location.assign('/login')
    }

    const navigateToTheSignUpPage = () => {
        location.assign('/signup')
    }
    return (
        <div className="gray-bg middle-box text-center loginscreen animated fadeInDown">
            <style dangerouslySetInnerHTML={{__html: `body{background: #f3f3f4}`}}/>
            <Head>
                <title>Login</title>
                <meta name="description" content="Generated by create next app"/>
                <link rel="icon" href="/favicon.ico"/>

                <meta charSet="utf-8"/>
                <meta name="viewport" content="width=device-width, initial-scale=1.0"/>

                <link href="css/bootstrap.min.css" rel="stylesheet"/>
                <link href="font-awesome/css/font-awesome.css" rel="stylesheet"/>

                <link href="css/animate.css" rel="stylesheet"/>
                <link href="css/style.css" rel="stylesheet"/>
            </Head>

            <div>
                <div>
                    <h1 className="logo-name">PHI</h1>
                </div>
                <h3>Welcome to PHI</h3>
                <p>Change new password</p>
                <div className="m-t">
                    <div className="form-group">
                        <input type="email" onChange={handleUserNameInputChange} value={userName}
                               className="form-control" placeholder="Your Email" required/>
                    </div>
                    <div className="form-group">
                        <input type="password" onChange={handlePasswordInputChange} value={password}
                               className="form-control" placeholder="New Password" required/>
                    </div>
                    <button onClick={handleClickChangePassword} className="btn btn-primary block full-width m-b">Submit
                    </button>
                    {showChangePasswordSuccess ? <ChangePasswordSuccessAlert/> : null}
                    {showChangePasswordError ? <ChangePasswordErrorAlert/> : null}
                    <p>or</p>
                    <button onClick={navigateToTheSignUpPage} className="btn bg-light block full-width m-b">Register new account
                    </button>
                </div>
            </div>
        </div>
    )
}

export default ForgotPassword